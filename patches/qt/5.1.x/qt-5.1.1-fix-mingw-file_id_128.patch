diff --git a/qtbase/src/corelib/io/qfilesystemengine_win.cpp b/qtbase/src/corelib/io/qfilesystemengine_win.cpp
index e8904b0..725bac8 100644
--- a/qtbase/src/corelib/io/qfilesystemengine_win.cpp
+++ b/qtbase/src/corelib/io/qfilesystemengine_win.cpp
@@ -566,23 +566,26 @@
     return QFileSystemEntry(ret, QFileSystemEntry::FromInternalPath());
 }
 
 #ifndef Q_OS_WINCE
 
 // FILE_INFO_BY_HANDLE_CLASS has been extended by FileIdInfo = 18 as of VS2012.
 typedef enum { Q_FileIdInfo = 18 } Q_FILE_INFO_BY_HANDLE_CLASS;
 
 #  if defined(Q_CC_MINGW) || (defined(Q_CC_MSVC) && _MSC_VER < 1700)
 
+// MinGW-64 defines FILE_ID_128 as of gcc-4.8.1 along with FILE_SUPPORTS_INTEGRITY_STREAMS
+#    if (defined(Q_CC_MINGW) && !defined(FILE_SUPPORTS_INTEGRITY_STREAMS)) || defined(Q_CC_MSVC)
 typedef struct _FILE_ID_128 {
     BYTE  Identifier[16];
 } FILE_ID_128, *PFILE_ID_128;
+#    endif // ((defined(Q_CC_MINGW) && !defined(FILE_SUPPORTS_INTEGRITY_STREAMS)) || defined(Q_CC_MSVC)
 
 typedef struct _FILE_ID_INFO {
     ULONGLONG VolumeSerialNumber;
     FILE_ID_128 FileId;
 } FILE_ID_INFO, *PFILE_ID_INFO;
 #  endif // if defined (Q_CC_MINGW) || (defined(Q_CC_MSVC) && _MSC_VER < 1700))
 
 // File ID for Windows up to version 7.
 static inline QByteArray fileId(HANDLE handle)
 {
@@ -607,21 +610,22 @@
         QSystemLibrary library(QLatin1String("kernel32"));
         getFileInformationByHandleEx = (GetFileInformationByHandleExType)library.resolve("GetFileInformationByHandleEx");
     }
     QByteArray result;
     if (getFileInformationByHandleEx) {
         FILE_ID_INFO infoEx;
         if (getFileInformationByHandleEx(handle, Q_FileIdInfo,
                                          &infoEx, sizeof(FILE_ID_INFO))) {
             result = QByteArray::number(infoEx.VolumeSerialNumber, 16);
             result += ':';
-            result += QByteArray((char *)infoEx.FileId.Identifier, sizeof(infoEx.FileId.Identifier)).toHex();
+            // Note: MinGW-64's definition of FILE_ID_128 differs from the MSVC one.
+            result += QByteArray((char *)&infoEx.FileId, sizeof(infoEx.FileId)).toHex();
         }
     }
     return result;
 }
 #endif // !Q_OS_WINCE
 
 //static
 QByteArray QFileSystemEngine::id(const QFileSystemEntry &entry)
 {
 #ifndef Q_OS_WINCE
