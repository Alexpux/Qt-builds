--- x86_64/qtwebkit/Source/WebCore/./platform/graphics/ANGLEWebKitBridge.cpp.orig	2014-04-09 22:12:10.982256600 +0100
+++ x86_64/qtwebkit/Source/WebCore/./platform/graphics/ANGLEWebKitBridge.cpp	2014-04-09 23:16:30.516009300 +0100
@@ -79,14 +79,16 @@
     for (ANGLEGetInfoType i = 0; i < numSymbols; ++i) {
         ANGLEShaderSymbol symbol;
         ANGLEGetInfoType nameLength = 0;
+        ShPrecisionType precision = SH_PRECISION_UNDEFINED;
+        int staticUse = 0;
         switch (symbolType) {
         case SH_ACTIVE_ATTRIBUTES:
             symbol.symbolType = SHADER_SYMBOL_TYPE_ATTRIBUTE;
-            ShGetActiveAttrib(compiler, i, &nameLength, &symbol.size, &symbol.dataType, nameBuffer.data(), mappedNameBuffer.data());
+            ShGetVariableInfo(compiler, SH_ACTIVE_ATTRIBUTES, static_cast<int>(i), &nameLength, &symbol.size, &symbol.dataType, &precision, &staticUse, nameBuffer.data(), mappedNameBuffer.data());
             break;
         case SH_ACTIVE_UNIFORMS:
             symbol.symbolType = SHADER_SYMBOL_TYPE_UNIFORM;
-            ShGetActiveUniform(compiler, i, &nameLength, &symbol.size, &symbol.dataType, nameBuffer.data(), mappedNameBuffer.data());
+            ShGetVariableInfo(compiler, SH_ACTIVE_UNIFORMS, static_cast<int>(i), &nameLength, &symbol.size, &symbol.dataType, &precision, &staticUse, nameBuffer.data(), mappedNameBuffer.data());
             break;
         default:
             ASSERT_NOT_REACHED();
@@ -95,7 +97,7 @@
         if (!nameLength)
             return false;
         
-        // The ShGetActive* calls above are guaranteed to produce null-terminated strings for
+        // The ShGetVariableInfo calls above are guaranteed to produce null-terminated strings for
         // nameBuffer and mappedNameBuffer. Also, the character set for symbol names
         // is a subset of Latin-1 as specified by the OpenGL ES Shading Language, Section 3.1 and
         // WebGL, Section "Characters Outside the GLSL Source Character Set".
@@ -189,7 +191,7 @@
 
     const char* const shaderSourceStrings[] = { shaderSource };
 
-    bool validateSuccess = ShCompile(compiler, shaderSourceStrings, 1, SH_OBJECT_CODE | SH_ATTRIBUTES_UNIFORMS | extraCompileOptions);
+    bool validateSuccess = ShCompile(compiler, shaderSourceStrings, 1, SH_OBJECT_CODE | SH_VARIABLES | extraCompileOptions);
     if (!validateSuccess) {
         int logSize = getValidationResultValue(compiler, SH_INFO_LOG_LENGTH);
         if (logSize > 1) {
--- x86_64/qtwebkit/Source/WebCore/./platform/graphics/opengl/Extensions3DOpenGLCommon.cpp.orig	2014-04-09 23:19:02.629709700 +0100
+++ x86_64/qtwebkit/Source/WebCore/./platform/graphics/opengl/Extensions3DOpenGLCommon.cpp	2014-04-09 23:22:08.511341600 +0100
@@ -170,7 +170,7 @@
 
     String translatedShaderSource;
     String shaderInfoLog;
-    int extraCompileOptions = SH_MAP_LONG_VARIABLE_NAMES | SH_CLAMP_INDIRECT_ARRAY_BOUNDS;
+    int extraCompileOptions = SH_CLAMP_INDIRECT_ARRAY_BOUNDS;
 
     if (m_requiresBuiltInFunctionEmulation)
         extraCompileOptions |= SH_EMULATE_BUILT_IN_FUNCTIONS;
