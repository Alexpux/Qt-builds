--- a/qtbase/mkspecs/win32-g++/qmake.conf.orig	2012-12-16 18:00:31.803375714 +0100
+++ b/qtbase/mkspecs/win32-g++/qmake.conf	2012-12-16 18:00:25.883273471 +0100
@@ -86,8 +86,8 @@
 QMAKE_LIBS_GUI          = -lgdi32 -lcomdlg32 -loleaut32 -limm32 -lwinmm -lws2_32 -lole32 -luuid -luser32 -ladvapi32
 QMAKE_LIBS_NETWORK      = -lws2_32
 QMAKE_LIBS_OPENGL       = -lglu32 -lopengl32 -lgdi32 -luser32
-QMAKE_LIBS_OPENGL_ES2   = -llibEGL -llibGLESv2 -lgdi32 -luser32
-QMAKE_LIBS_OPENGL_ES2_DEBUG = -llibEGLd -llibGLESv2d -lgdi32 -luser32
+QMAKE_LIBS_OPENGL_ES2   = -lEGL -lGLESv2 -lgdi32 -luser32
+QMAKE_LIBS_OPENGL_ES2_DEBUG = -lEGL -lGLESv2 -lgdi32 -luser32
 QMAKE_LIBS_COMPAT       = -ladvapi32 -lshell32 -lcomdlg32 -luser32 -lgdi32 -lws2_32
 QMAKE_LIBS_QT_ENTRY     = -lmingw32 -lqtmain
 
--- a/qtbase/src/src.pro.orig	2012-12-16 18:00:31.803375714 +0100
+++ b/qtbase/src/src.pro	2012-12-16 18:00:25.883273471 +0100
@@ -114,10 +114,6 @@
         SUBDIRS += src_3rdparty_harfbuzzng
         src_gui.depends += src_3rdparty_harfbuzzng
     }
-    win32:contains(QT_CONFIG, angle)|contains(QT_CONFIG, dynamicgl) {
-        SUBDIRS += src_angle
-        src_gui.depends += src_angle
-    }
     SUBDIRS += src_gui src_platformsupport
     contains(QT_CONFIG, opengl(es1|es2)?):SUBDIRS += src_openglextensions
     src_plugins.depends += src_gui src_platformsupport
--- a/qtbase/src/plugins/platforms/windows/windows.pri.orig	2012-12-21 19:32:52.519838959 +0100
+++ b/qtbase/src/plugins/platforms/windows/windows.pri	2012-12-21 19:34:11.913226062 +0100
@@ -13,6 +13,7 @@
 !wince*:LIBS *= -luser32 -lwinspool -limm32 -lwinmm  -loleaut32
 
 contains(QT_CONFIG, opengl):!contains(QT_CONFIG, opengles2):!contains(QT_CONFIG, dynamicgl): LIBS *= -lopengl32
+contains(QT_CONFIG, angle):LIBS += -lGLESv2 -lEGL
 
 mingw: LIBS *= -luuid
 # For the dialog helpers:
--- a/qtbase/src/opengl/opengl.pro.orig	2012-12-21 19:30:29.916330288 +0100
+++ b/qtbase/src/opengl/opengl.pro	2012-12-21 19:31:01.279878067 +0100
@@ -15,6 +15,10 @@
 contains(QT_CONFIG, opengles2):CONFIG += opengles2
 contains(QT_CONFIG, egl):CONFIG += egl
 
+win32:contains(QT_CONFIG, angle) {
+    LIBS_PRIVATE += -lGLESv2
+}
+
 HEADERS += qgl.h \
            qgl_p.h \
            qglcolormap.h \
--- a/qtbase/src/gui/Qt5GuiConfigExtras.cmake.in.orig	2013-10-22 23:56:20.562965370 +0200
+++ b/qtbase/src/gui/Qt5GuiConfigExtras.cmake.in	2013-10-22 23:57:16.142476851 +0200
@@ -2,9 +2,9 @@
 !!IF !isEmpty(CMAKE_ANGLE_EGL_DLL_RELEASE)
 
 !!IF isEmpty(CMAKE_INCLUDE_DIR_IS_ABSOLUTE)
-set(Qt5Gui_EGL_INCLUDE_DIRS \"${_qt5$${CMAKE_MODULE_NAME}_install_prefix}/$$CMAKE_INCLUDE_DIR/QtANGLE\")
+set(Qt5Gui_EGL_INCLUDE_DIRS \"${_qt5$${CMAKE_MODULE_NAME}_install_prefix}/$$CMAKE_INCLUDE_DIR\")
 !!ELSE
-set(Qt5Gui_EGL_INCLUDE_DIRS \"$$CMAKE_INCLUDE_DIR/QtANGLE\")
+set(Qt5Gui_EGL_INCLUDE_DIRS \"$$CMAKE_INCLUDE_DIR\")
 !!ENDIF
 
 _qt5_Gui_check_file_exists(${Qt5Gui_EGL_INCLUDE_DIRS})
--- a/qtbase/src/gui/gui.pro.orig	2013-10-23 00:12:41.084984399 +0200
+++ b/qtbase/src/gui/gui.pro	2013-10-23 00:14:29.872985611 +0200
@@ -12,12 +12,6 @@
     platforms \
     imageformats
 
-# This is here only because the platform plugin is no module, obviously.
-win32:contains(QT_CONFIG, angle)|contains(QT_CONFIG, dynamicgl) {
-    MODULE_AUX_INCLUDES = \
-        \$\$QT_MODULE_INCLUDE_BASE/QtANGLE
-}
-
 load(qt_module)
 
 # Code coverage with TestCocoon
@@ -30,6 +30,10 @@
 
 mac:!ios: LIBS_PRIVATE += -framework Cocoa
 
+win32:contains(QT_CONFIG, angle) {
+    LIBS_PRIVATE += -lGLESv2
+}
+
 CONFIG += simd optimize_full
 
 include(accessible/accessible.pri)
@@ -50,13 +50,21 @@
 contains(QT_CONFIG, angle) {
     CMAKE_GL_INCDIRS = $$CMAKE_INCLUDE_DIR
     CMAKE_ANGLE_EGL_DLL_RELEASE = libEGL.dll
-    CMAKE_ANGLE_EGL_IMPLIB_RELEASE = libEGL.lib
     CMAKE_ANGLE_GLES2_DLL_RELEASE = libGLESv2.dll
-    CMAKE_ANGLE_GLES2_IMPLIB_RELEASE = libGLESv2.lib
     CMAKE_ANGLE_EGL_DLL_DEBUG = libEGLd.dll
-    CMAKE_ANGLE_EGL_IMPLIB_DEBUG = libEGLd.lib
     CMAKE_ANGLE_GLES2_DLL_DEBUG = libGLESv2d.dll
-    CMAKE_ANGLE_GLES2_IMPLIB_DEBUG = libGLESv2d.lib
+
+    win32-g++* {
+        CMAKE_ANGLE_EGL_IMPLIB_RELEASE = libEGL.dll.a
+        CMAKE_ANGLE_GLES2_IMPLIB_RELEASE = libGLESv2.dll.a
+        CMAKE_ANGLE_EGL_IMPLIB_DEBUG = libEGL.dll.a
+        CMAKE_ANGLE_GLES2_IMPLIB_DEBUG = libGLESv2.dll.a
+    } else {
+        CMAKE_ANGLE_EGL_IMPLIB_RELEASE = libEGL.lib
+        CMAKE_ANGLE_GLES2_IMPLIB_RELEASE = libGLESv2.lib
+        CMAKE_ANGLE_EGL_IMPLIB_DEBUG = libEGLd.lib
+        CMAKE_ANGLE_GLES2_IMPLIB_DEBUG = libGLESv2d.lib
+    }
 
     CMAKE_QT_OPENGL_IMPLEMENTATION = GLESv2
 } else {
